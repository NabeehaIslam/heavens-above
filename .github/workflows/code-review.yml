name: 🕵️ Code Review Workflow

on:
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch: # ✅ Manual trigger from UI

permissions:
  contents: read
  pull-requests: write
  security-events: write

jobs:
  code-review:
    name: 🔍 Automated Code Review
    runs-on: ubuntu-latest

    steps:
      - name: 🧩 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # -------------------------------
      # 1️⃣ Install Dependencies
      # -------------------------------
      - name: 📦 Install Dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # -------------------------------
      # 2️⃣ Code Linting (Standard Enforcement)
      # -------------------------------
      - name: ✨ Run ESLint (Code Style Check)
        run: |
          if [ -f .eslintrc.json ] || [ -f .eslintrc.js ]; then
            npx eslint . --max-warnings=0 || (echo "❌ ESLint failed"; exit 1)
          else
            echo "⚠️ No ESLint config found — skipping linting."
          fi

      # -------------------------------
      # 3️⃣ Static Analysis (Code Quality)
      # -------------------------------
      - name: 🧠 Run CodeQL Security Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      # -------------------------------
      # 4️⃣ Dependency Audit (Security Check)
      # -------------------------------
      - name: 🔒 Security Audit
        run: |
          echo "Scanning dependencies for vulnerabilities..."
          npm audit --audit-level=moderate || true

      # -------------------------------
      # 5️⃣ Automated PR Comment Feedback
      # -------------------------------
      - name: 💬 Post Code Review Summary
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const conclusion = context.runId ? '✅ Code review checks completed successfully!' : '⚠️ Some issues were detected.';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### 🤖 Automated Code Review Summary
              ${conclusion}

              **Checks Performed:**
              - Code style: ESLint
              - Code quality: CodeQL
              - Dependency security: npm audit

              Please fix any reported issues before merging.`
            })

  # -------------------------------
  # 6️⃣ Enforce Review Policy (Optional)
  # -------------------------------
  enforce-policy:
    name: 🚫 Enforce Merge Policy
    runs-on: ubuntu-latest
    needs: code-review
    if: always()
    steps:
      - name: Check for failures
        run: |
          if [ "${{ needs.code-review.result }}" != "success" ]; then
            echo "❌ Code review checks failed. Merge blocked."
            exit 1
          else
            echo "✅ All checks passed. Merge allowed."
          fi

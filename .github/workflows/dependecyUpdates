name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:  # Allow manual trigger
  pull_request:
    paths:
      - 'package.json'
      - 'package-lock.json'

jobs:
  # Check and update dependencies
  check-dependencies:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Check for outdated dependencies
        id: outdated
        run: |
          echo "Checking for outdated dependencies..."
          npm outdated --json > outdated.json || true
          
          if [ -s outdated.json ] && [ "$(cat outdated.json)" != "{}" ]; then
            echo "has_updates=true" >> $GITHUB_OUTPUT
            echo "üì¶ Outdated dependencies found:"
            cat outdated.json | jq -r 'to_entries[] | "  - \(.key): \(.value.current) ‚Üí \(.value.latest)"'
          else
            echo "has_updates=false" >> $GITHUB_OUTPUT
            echo "‚úÖ All dependencies are up to date!"
          fi
      
      - name: Update dependencies
        if: steps.outdated.outputs.has_updates == 'true'
        run: |
          echo "Updating dependencies to latest versions..."
          npm update --save
          npm audit fix || true
      
      - name: Create Pull Request
        if: steps.outdated.outputs.has_updates == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(deps): update dependencies'
          title: 'üîÑ Automated Dependency Updates'
          body: |
            ## üì¶ Dependency Updates
            
            This PR contains automated dependency updates.
            
            ### Changes
            - Updated outdated npm packages
            - Ran security audit fixes
            
            ### Review Checklist
            - [ ] Check the changes in `package.json`
            - [ ] Verify `package-lock.json` updates
            - [ ] Ensure tests pass
            - [ ] Check for breaking changes
            
            **Generated by GitHub Actions**
          branch: automated-dependency-updates
          delete-branch: true
          labels: |
            dependencies
            automated
      
      - name: Upload dependency report
        if: steps.outdated.outputs.has_updates == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: dependency-updates-${{ github.run_number }}
          path: outdated.json
          retention-days: 30
      
      - name: Summary
        if: always()
        run: |
          if [ "${{ steps.outdated.outputs.has_updates }}" == "true" ]; then
            echo "‚úÖ Dependencies checked and PR created"
          else
            echo "‚úÖ All dependencies are up to date"
          fi

  # Validate dependency updates on PRs
  validate-dependencies:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: |
          echo "Installing dependencies..."
          npm ci
      
      - name: Run security audit
        id: audit
        run: |
          echo "Running security audit..."
          npm audit --audit-level=moderate || echo "audit_warnings=true" >> $GITHUB_OUTPUT
      
      - name: Check package integrity
        run: |
          echo "Verifying package integrity..."
          npm ls --depth=0
      
      - name: Test application
        run: |
          echo "Testing application..."
          timeout 5s npm start || exit_code=$?
          if [ "$exit_code" = "124" ] || [ "$exit_code" = "0" ]; then
            echo "‚úÖ Application runs successfully"
          else
            echo "‚ùå Application failed to start"
            exit 1
          fi
      
      - name: Generate validation report
        if: always()
        run: |
          echo "=== Dependency Validation Report ===" | tee validation-report.txt
          echo "Generated: $(date)" | tee -a validation-report.txt
          echo "PR: #${{ github.event.pull_request.number }}" | tee -a validation-report.txt
          echo "" | tee -a validation-report.txt
          echo "Dependencies:" | tee -a validation-report.txt
          npm list --depth=0 2>&1 | tee -a validation-report.txt || true
          echo "" | tee -a validation-report.txt
          echo "Security:" | tee -a validation-report.txt
          npm audit 2>&1 | tee -a validation-report.txt || true
      
      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-report-pr-${{ github.event.pull_request.number }}
          path: validation-report.txt
          retention-days: 30
      
      - name: Comment on PR - Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## ‚úÖ Dependency Validation Passed\n\n' +
                    '**All checks completed successfully:**\n' +
                    '- ‚úì Dependencies installed correctly\n' +
                    '- ‚úì Security audit passed\n' +
                    '- ‚úì Package integrity verified\n' +
                    '- ‚úì Application startup tested\n\n' +
                    '**Status:** Safe to merge after code review'
            })
      
      - name: Comment on PR - Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '## ‚ùå Dependency Validation Failed\n\n' +
                    '**Issues detected during validation.**\n\n' +
                    'Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.\n\n' +
                    '**Common causes:**\n' +
                    '- Breaking changes in updated packages\n' +
                    '- Security vulnerabilities detected\n' +
                    '- Incompatible dependency versions\n\n' +
                    '**Action required:** Manual review and fixes needed'
            })

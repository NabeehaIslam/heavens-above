name: Deploy to Heroku

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  HEROKU_APP_NAME: 'your-app-name'

jobs:
  # Stage 1: Build
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build application
        run: npm run build
        env:
          CI: true
          NODE_ENV: production
      
      - name: Archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: |
            dist/
            package*.json
            Procfile
          retention-days: 1

  # Stage 2: Test
  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run lint checks
        run: npm run lint || echo "No lint script configured"
        continue-on-error: true
      
      - name: Run unit tests
        run: npm test -- --coverage
        env:
          CI: true
      
      - name: Run integration tests
        run: npm run test:integration || echo "No integration tests"
        continue-on-error: true
      
      - name: Security audit
        run: npm audit --production --audit-level=high
        continue-on-error: true
      
      - name: Dependency vulnerability check
        run: |
          npx audit-ci --high || echo "audit-ci not configured"
        continue-on-error: true
      
      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-coverage
          path: coverage/
          retention-days: 7

  # Stage 3: Deploy to Heroku
  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment:
      name: production
      url: https://${{ env.HEROKU_APP_NAME }}.herokuapp.com
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full git history for Heroku
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-output
      
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ env.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          buildpack: "heroku/nodejs"
          branch: "main"
      
      - name: Wait for deployment
        run: sleep 15
      
      - name: Health check
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.HEROKU_APP_NAME }}.herokuapp.com)
          if [ $response -eq 200 ]; then
            echo "‚úÖ Health check passed (HTTP $response)"
          else
            echo "‚ö†Ô∏è Health check returned HTTP $response"
            exit 1
          fi
      
      - name: Run smoke tests
        run: |
          curl -f https://${{ env.HEROKU_APP_NAME }}.herokuapp.com/api/health || echo "Smoke test skipped"
        continue-on-error: true
      
      - name: Deployment success notification
        if: success()
        run: |
          echo "üöÄ Successfully deployed to Heroku!"
          echo "üì± App URL: https://${{ env.HEROKU_APP_NAME }}.herokuapp.com"
      
      - name: Deployment failure notification
        if: failure()
        run: echo "‚ùå Deployment to Heroku failed!"

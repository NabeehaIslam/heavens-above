name: Simple Scheduled Tasks

on:
  # Schedule examples:
  schedule:
    # Every day at 3 AM UTC
    - cron: '0 3 * * *'
    
    # Every Monday at 9 AM UTC
    # - cron: '0 9 * * 1'
    
    # Every hour
    # - cron: '0 * * * *'
    
    # Every 15 minutes
    # - cron: '*/15 * * * *'
  
  # Manual trigger button
  workflow_dispatch:

jobs:
  # ==================== DAILY BACKUP ====================
  backup:
    name: üì¶ Daily Backup
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create timestamp
        id: date
        run: echo "timestamp=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Backup repository
        run: |
          mkdir backups
          zip -r backups/backup-${{ steps.date.outputs.timestamp }}.zip . \
            -x "*.git*" -x "*node_modules*" -x "*backups*"
          
          echo "‚úÖ Backup created!"
          ls -lh backups/

      - name: Upload backup
        uses: actions/upload-artifact@v4
        with:
          name: backup-${{ steps.date.outputs.timestamp }}
          path: backups/
          retention-days: 30

      - name: Summary
        run: |
          echo "## üì¶ Backup Completed" >> $GITHUB_STEP_SUMMARY
          echo "Time: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "File: backup-${{ steps.date.outputs.timestamp }}.zip" >> $GITHUB_STEP_SUMMARY

  # ==================== DEPENDENCY CHECK ====================
  check-dependencies:
    name: üîç Check Dependencies
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Check for outdated packages
        run: |
          echo "## üì¶ Dependency Status" >> $GITHUB_STEP_SUMMARY
          npm outdated || echo "All up to date!" >> $GITHUB_STEP_SUMMARY

      - name: Security audit
        run: |
          echo "## üîí Security Audit" >> $GITHUB_STEP_SUMMARY
          npm audit || echo "Vulnerabilities found" >> $GITHUB_STEP_SUMMARY

  # ==================== CLEANUP OLD FILES ====================
  cleanup:
    name: üßπ Cleanup
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Remove temp files
        run: |
          echo "Cleaning temporary files..."
          find . -name "*.tmp" -type f -delete
          find . -name "*.log" -type f -delete
          find . -name ".DS_Store" -type f -delete
          echo "‚úÖ Cleanup done!"

      - name: Summary
        run: |
          echo "## üßπ Cleanup Report" >> $GITHUB_STEP_SUMMARY
          echo "Removed all .tmp, .log, and .DS_Store files" >> $GITHUB_STEP_SUMMARY

  # ==================== GENERATE REPORT ====================
  generate-report:
    name: üìä Generate Report
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate statistics
        run: |
          echo "## üìä Repository Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Statistics:" >> $GITHUB_STEP_SUMMARY
          echo "- Total files: $(find . -type f | wc -l)" >> $GITHUB_STEP_SUMMARY
          echo "- Total commits: $(git rev-list --count HEAD)" >> $GITHUB_STEP_SUMMARY
          echo "- Last commit: $(git log -1 --pretty=format:'%h - %s (%cr)')" >> $GITHUB_STEP_SUMMARY
          echo "- Repository size: $(du -sh . | cut -f1)" >> $GITHUB_STEP_SUMMARY

  # ==================== HEALTH CHECK ====================
  health-check:
    name: üè• Health Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check repository health
        run: |
          echo "## üè• Health Check" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check important files
          if [ -f "README.md" ]; then
            echo "‚úÖ README.md exists" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå README.md missing" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "LICENSE" ]; then
            echo "‚úÖ LICENSE exists" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå LICENSE missing" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "package.json" ]; then
            echo "‚úÖ package.json exists" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ùå package.json missing" >> $GITHUB_STEP_SUMMARY
          fi

  # ==================== NOTIFICATION ====================
  notify:
    name: üîî Send Notification
    runs-on: ubuntu-latest
    needs: [backup, check-dependencies, cleanup, generate-report, health-check]
    if: always()
    
    steps:
      - name: Create summary
        run: |
          echo "## üéØ Scheduled Tasks Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Completed at:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Job Results:" >> $GITHUB_STEP_SUMMARY
          echo "- Backup: ${{ needs.backup.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Dependencies: ${{ needs.check-dependencies.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Cleanup: ${{ needs.cleanup.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Report: ${{ needs.generate-report.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Health Check: ${{ needs.health-check.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Check for failures
        if: contains(needs.*.result, 'failure')
        run: |
          echo "‚ö†Ô∏è Some tasks failed!"
          exit 1

      - name: Success message
        if: ${{ !contains(needs.*.result, 'failure') }}
        run: echo "‚úÖ All tasks completed successfully!"
